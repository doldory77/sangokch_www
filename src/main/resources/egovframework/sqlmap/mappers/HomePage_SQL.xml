<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sangok.service.impl.WebMapper">

	<select id="selectCodeGroup" parameterType="map" resultType="map">
		/*WebMapper.selectCodeGroup*/
		{ CALL SP_GET_CODE_GROUP() }
    </select>
    
	<select id="selectMenuNm" parameterType="string" resultType="map">
		/*WebMapper.selectMenuNm*/
		SELECT FN_GET_MENU_NM(#{MENU_ID}) AS TITLE
    </select>
    
    <update id="updateCodeGroup" statementType="CALLABLE" parameterType="map">
    	{ CALL SP_MERGE_CODE_GROUP(
    		#{RTN_MSG, mode=INOUT, jdbcType=VARCHAR}
    		, #{GROUP_ID, mode=IN, jdbcType=VARCHAR}
    		, #{GROUP_NM, mode=IN, jdbcType=VARCHAR}) }
    	/*WebMapper.updateCodeGroup*/	
    </update>
    
    <update id="updateCode" statementType="CALLABLE" parameterType="map">
    	{ CALL SP_MERGE_CODE(
    		#{RTN_MSG, mode=INOUT, jdbcType=VARCHAR}
    		, #{GROUP_ID, mode=IN, jdbcType=VARCHAR}
    		, #{CODE, mode=IN, jdbcType=VARCHAR}
    		, #{CODE_NM, mode=IN, jdbcType=VARCHAR}
    		, #{USE_YN, mode=IN, jdbcType=VARCHAR}
    		, #{ATTR1_NUM, mode=IN, jdbcType=VARCHAR}
    		, #{ATTR1_CHR, mode=IN, jdbcType=VARCHAR}) }
    	/*WebMapper.updateCode*/	
    </update>

    <select id="selectCode" parameterType="map" resultType="map">
    	/*WebMapper.selectCode*/
		{ CALL SP_GET_CODE(#{GROUP_ID}, NULL, NULL) }
    </select>
    
    <select id="selectMenuByParentId" parameterType="map" resultType="map">
    	/*WebMapper.selectMenuByParentId*/
        <![CDATA[
		SELECT MENU_ID
			 , MENU_NM
			 , MENU_LEVEL
			 , ORD_NO
			 , URL
			 , MNG_URL
			 , PARENT_MENU_ID
		 FROM H_MENU 
		WHERE PARENT_MENU_ID = #{PARENT_MENU_ID}
		ORDER BY ORD_NO
        ]]>
    </select>
    
    <update id="updateSubMenu" statementType="CALLABLE" parameterType="map">
    	{ CALL SP_MERGE_MENU(
    		#{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
    		, #{MENU_ID, mode=IN, jdbcType=VARCHAR}
    		, #{PARENT_MENU_ID, mode=IN, jdbcType=VARCHAR}
    		, #{MENU_NM, mode=IN, jdbcType=VARCHAR}
    		, #{URL, mode=IN, jdbcType=VARCHAR}
    		, #{MNG_URL, mode=IN, jdbcType=VARCHAR}
    		, #{USE_YN, mode=IN, jdbcType=VARCHAR}
    		, #{ORD_NO, mode=INOUT, jdbcType=INTEGER}
    		, #{MENU_LEVEL, mode=INOUT, jdbcType=INTEGER}) }
    	/*WebMapper.updateSubMenu*/	
    </update>    
    
    <select id="selectMenuBySP" statementType="CALLABLE" parameterType="map" resultType="map">
    	/*WebMapper.selectMenuBySP*/
    	{ CALL SP_GET_MENU(#{P_MENU_GROUP}, #{P_DEPTH_CHAR}) }
    </select>
    
	<select id="selectUser" statementType="CALLABLE" parameterType="map" resultType="map">
		/*WebMapper.selectUser*/
		{ CALL SP_GET_USER(#{ID}, #{PW}, #{USE_YN}) } 
	</select>
	
    <update id="updateUser" statementType="CALLABLE" parameterType="map">
    	{ 
    		CALL SP_MERGE_USER(
	    		#{RTN_MSG, mode=INOUT, jdbcType=VARCHAR}
	    		, #{ID, mode=IN, jdbcType=VARCHAR}
	    		, #{PW, mode=IN, jdbcType=VARCHAR}
	    		, #{NEW_PW, mode=IN, jdbcType=VARCHAR}
	    		, #{ADM_YN, mode=IN, jdbcType=VARCHAR}
	    		, #{USE_YN, mode=IN, jdbcType=VARCHAR}
	    		, #{ATTR01, mode=IN, jdbcType=VARCHAR}
	    	) 
    	}
    	/*WebMapper.updateUser*/
    </update>	    
    
	<select id="updateBoard" statementType="CALLABLE" parameterType="map">
		{ 
			CALL SP_MERGE_BOARD(
				#{RTN_MSG, mode=INOUT, jdbcType=VARCHAR}
				, #{DEL_YN, mode=IN, jdbcType=VARCHAR}
				, #{SUBJECT, mode=IN, jdbcType=VARCHAR}
				, #{CONTENT, mode=IN, jdbcType=VARCHAR}
				, #{GROUP_ID, mode=IN, jdbcType=VARCHAR}
				, #{SEQ_NO, mode=INOUT, jdbcType=INTEGER}
				, #{SCREEN_YN, mode=IN, jdbcType=VARCHAR}
				, #{DEPTH_NO, mode=IN, jdbcType=FLOAT}
				, #{ORD_NO, mode=IN, jdbcType=INTEGER}
				, #{USE_YN, mode=IN, jdbcType=VARCHAR}
				, #{USER_ID, mode=IN, jdbcType=VARCHAR}
				, #{TAG_CD, mode=IN, jdbcType=VARCHAR}
				, #{MAIN_DISP_YN, mode=IN, jdbcType=VARCHAR}
				, #{ATTR01, mode=IN, jdbcType=VARCHAR}
				, #{ATTR02, mode=IN, jdbcType=VARCHAR}
				, #{ATTR03, mode=IN, jdbcType=VARCHAR}
				, #{ATTR04, mode=IN, jdbcType=VARCHAR}
				, #{ATTR05, mode=IN, jdbcType=VARCHAR}
			) 
		}
		/*WebMapper.updateBoard*/ 
	</select>
	
	<delete id="deleteBoard" parameterType="map">
		DELETE FROM H_BOARD WHERE GROUP_ID = #{GROUP_ID} AND SEQ_NO = #{SEQ_NO}
	</delete>
	
	<select id="selectBoardList" statementType="CALLABLE" parameterType="map" resultType="map">
		{
			CALL SP_GET_BOARD_LIST(
				#{BLOCK_START, mode=OUT, jdbcType=INTEGER}
				, #{BLOCK_END, mode=OUT, jdbcType=INTEGER}
				, #{TOTAL_PAGE, mode=OUT, jdbcType=INTEGER}
				, #{TOTAL_BLOCK, mode=OUT, jdbcType=INTEGER}
				, #{START_NUM, mode=OUT, jdbcType=INTEGER}
				, #{CURR_PAGE, mode=IN, jdbcType=INTEGER}
				, #{GROUP_ID, mode=IN, jdbcType=VARCHAR}
				, #{TAG_CD, mode=IN, jdbcType=VARCHAR}
				, #{USE_YN, mode=IN, jdbcType=VARCHAR}
				, #{ORDER_BY, mode=IN, jdbcType=VARCHAR}
			)
		}
		/*WebMapper.selectBoardList*/
	</select>
	
	<select id="selectBoardGalary" statementType="CALLABLE" parameterType="map" resultType="map">
		{
			CALL SP_GET_BOARD_GALARY(
				#{BLOCK_START, mode=OUT, jdbcType=INTEGER}
				, #{BLOCK_END, mode=OUT, jdbcType=INTEGER}
				, #{TOTAL_PAGE, mode=OUT, jdbcType=INTEGER}
				, #{TOTAL_BLOCK, mode=OUT, jdbcType=INTEGER}
				, #{START_NUM, mode=OUT, jdbcType=INTEGER}
				, #{CURR_PAGE, mode=IN, jdbcType=INTEGER}
				, #{GROUP_ID, mode=IN, jdbcType=VARCHAR}
				, #{TAG_CD, mode=IN, jdbcType=VARCHAR}
			)
		}
		/*WebMapper.selectBoardGalary*/
	</select>
	
	<select id="selectBoardDtl" statementType="CALLABLE" parameterType="map" resultType="map">
		/*WebMapper.selectBoardDtl*/
		{ CALL SP_GET_BOARD_DTL(#{GROUP_ID}, #{SEQ_NO}, #{TAG_CD}, #{USE_YN}, #{ORDER_BY}) }
	</select>
	
	<select id="selectBoardDtlByTag" statementType="CALLABLE" parameterType="map" resultType="map">
		/*WebMapper.selectBoardDtlByTag*/
		{ CALL SP_GET_BOARD_DTL_BYTAG(#{TAG_CD}) }
	</select>
	
	<select id="selectBible" statementType="CALLABLE" parameterType="map" resultType="map">
		{ CALL SP_GET_BIBLE(
			#{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
			, #{SEARCH_KEYWORD, mode=IN, jdbcType=VARCHAR}
		) }
		/*WebMapper.selectBible*/
	</select>
	
	<select id="selectHymn" statementType="CALLABLE" parameterType="map" resultType="map">
		{ CALL SP_GET_HYMN(
			#{RTN_MSG, mode=OUT, jdbcType=VARCHAR}
			, #{SEARCH_KEYWORD, mode=IN, jdbcType=VARCHAR}
		) }
		/*WebMapper.selectHymn*/
	</select>
	
	<select id="selectUserAuth" parameterType="map" resultType="map">
		/*WebMapper.selectMenuNm*/
		SELECT AA.USER_ID
			 , AA.MENU_LEVEL
			 , AA.MENU_ID
			 , AA.MENU_NM
			 , REPEAT('ㄴ', AA.MENU_LEVEL-1) PRE_STR
			 , AA.ORD_NO
			 , IFNULL(C.USE_YN, 'N') USE_YN
		FROM (
			SELECT A.ID USER_ID
				 , B.MENU_LEVEL
				 , B.MENU_ID
				 , B.MENU_NM
				 , B.ORD_NO
			  FROM H_USER A
			  JOIN H_MENU B
			 WHERE A.ID = #{USER_ID}
		) AA
		LEFT OUTER JOIN H_USER_AUTH C ON AA.USER_ID = C.USER_ID AND AA.MENU_ID = C.MENU_ID
		ORDER BY AA.MENU_ID, AA.ORD_NO
    </select>
    
	<select id="selectEnv" parameterType="map" resultType="map">
		SELECT CONCAT(GROUP_ID, '_', CODE) AS CODE
			 , ATTR1_NUM AS VALUE_NUM
			 , ATTR1_CHR AS VALUE_STR
		  FROM H_CODE 
		 WHERE GROUP_ID = #{GROUP_ID}
		   AND USE_YN = 'Y'
    </select>
    
    <update id="updateUserAuth" statementType="CALLABLE" parameterType="map">
    	{ CALL SP_MERGE_AUTH(
    		#{USER_ID, mode=IN, jdbcType=VARCHAR}
    		, #{MENU_ID, mode=IN, jdbcType=VARCHAR}
    		, #{USE_YN, mode=IN, jdbcType=VARCHAR}) }
    	/*WebMapper.updateUserAuth*/	
    </update>
    
	<select id="selectTitle" parameterType="map" resultType="map">
		SELECT MENU_NM FROM H_MENU WHERE MENU_ID = #{MENU_ID}
    </select>
    
    <select id="selectDispYnBoard" parameterType="map" resultType="map">
    	/*selectDispYnBoard*/
		SELECT M.*
		FROM (    
			SELECT GROUP_ID
				 , FN_GET_MENU_NM(GROUP_ID) GROUP_NM
				 , SEQ_NO
				 , SUBJECT
				 , ATTR01
				 , ATTR02
				 , ATTR03
				 , ATTR04
				 , ATTR05
				 , CASE
				 	WHEN GROUP_ID = 'C0000001' THEN 1 /*주일예배*/
				 	WHEN GROUP_ID = 'C0000002' THEN 2 /*주일찬양*/
				 	WHEN GROUP_ID = 'C0000003' THEN 3 /*기타행사*/
				 	WHEN GROUP_ID = 'E0000003' THEN 4 /*공지사항*/
				 	WHEN GROUP_ID = 'E0000002' THEN 5 /*새가족*/
				 	WHEN GROUP_ID = 'E0000004' THEN 6 /*갤러리*/
				 	ELSE 7
				 END FIRST_ORDER
			  FROM H_BOARD
			 WHERE USE_YN = 'Y'
			 <if test="TAG_CD != null and !TAG_CD.equals('')">
			   AND TAG_CD = #{TAG_CD}
			 </if>
			 <if test="GROUP_ID != null and !GROUP_ID.equals('')">
			   AND GROUP_ID = #{GROUP_ID}
			 </if>
			 <if test="MAIN_DISP_YN != null and !MAIN_DISP_YN.equals('')">
			   AND MAIN_DISP_YN = #{MAIN_DISP_YN}
			 </if>
		) M
		ORDER BY FIRST_ORDER, ATTR03 DESC
    </select>        	
	
	<insert id="insertAccessLog" parameterType="map">
		INSERT INTO H_LOG (
			SEQ_NO
			, REQUEST_URL
			, REQUEST_QUERY
			, REQUEST_DT
			, REQUEST_TM
			, REQUEST_ADDR
		) SELECT
			(SELECT IFNULL(MAX(SEQ_NO)+1, 1) FROM H_LOG WHERE REQUEST_URL = #{REQUEST_URL} AND REQUEST_DT = DATE_FORMAT(SYSDATE(), '%Y%m%d'))
			, #{REQUEST_URL}
			, #{REQUEST_QUERY}
			, DATE_FORMAT(SYSDATE(), '%Y%m%d')
			, DATE_FORMAT(SYSDATE(), '%T')
			, #{REQUEST_ADDR}
	</insert>
	
	<select id="selectVisitCnt" parameterType="map" resultType="map">
		SELECT 
			(SELECT COUNT(*) FROM (
				SELECT REQUEST_ADDR
				  FROM H_LOG 
				 WHERE REQUEST_DT = DATE_FORMAT(SYSDATE(), '%Y%m%d')
				 GROUP BY REQUEST_ADDR
			) X) CNT_TODAY
		
			,(SELECT COUNT(*) FROM (
				SELECT REQUEST_DT, REQUEST_ADDR
				  FROM H_LOG 
				 WHERE REQUEST_DT BETWEEN DATE_FORMAT(SYSDATE(), '%Y%m01') AND DATE_FORMAT(LAST_DAY(SYSDATE()), '%Y%m%d')
				 GROUP BY REQUEST_DT, REQUEST_ADDR
			) X) CNT_MONTH	
	</select>
	
</mapper>
